import csv


class MergeInstances():
    def __init__(self, src_files, output_file, sampling_gap=1):
        self.output_file = output_file
        self.src_files = src_files
        self.sampling_gap = sampling_gap

    def merge_instance(self):
        fid_output = open(self.output_file, 'w')
        csv_writer = csv.writer(fid_output)

        for i, s_f in enumerate(self.src_files):
            print(s_f)
            fid_input = open(s_f, 'r')
            csv_reader = csv.reader(fid_input)

            instance_gap_count = 0
            instance_class = None

            l_seek = 0
            for e_l in csv_reader:
                l_seek = l_seek + 1
                if l_seek == 1 and i != 0:
                    continue

                if e_l[-1] != instance_class or instance_gap_count >= self.sampling_gap:
                    instance_gap_count = 0
                    instance_class = e_l[-1]
                    csv_writer.writerow(e_l)

                instance_gap_count = instance_gap_count + 1

            fid_input.close()


if __name__ == "__main__":

    attack_days = ['16-10-05','16-10-14','16-11-14','16-11-17','16-11-28','16-12-05','16-12-06','16-12-07','16-12-08','16-12-09','16-12-10','16-12-11','16-12-12','16-12-13','16-12-14','16-12-15','16-12-16','16-12-17','16-12-18','16-12-19','16-12-20','16-12-21','16-12-22','16-12-23','16-12-24','17-01-02','17-01-10','17-01-12','17-01-29','17-01-30','17-01-31','17-02-02','17-02-06','17-02-07','17-02-08','17-02-09','17-02-10','17-02-14','17-02-20','17-02-22','17-03-01','17-03-02','17-03-03','17-03-07','17-03-08','17-03-09','17-03-10','17-03-14','17-03-16','17-03-23','17-03-27']

    # ##########################OF device identification##########################
    # train_3months = ['16-10-01', '16-10-02', '16-10-03', '16-10-04', '16-10-05', '16-10-06', '16-10-07', '16-10-08',
    #              '16-10-09', '16-10-10', '16-10-11', '16-10-12', '16-10-13', '16-10-14', '16-10-15', '16-10-16',
    #              '16-10-17', '16-10-18', '16-10-19', '16-10-20', '16-10-21', '16-10-22', '16-10-23', '16-10-24',
    #              '16-10-25', '16-10-26', '16-10-27', '16-10-28', '16-10-29', '16-10-30', '16-10-31', '16-11-01',
    #              '16-11-02', '16-11-03', '16-11-04', '16-11-05', '16-11-06', '16-11-07', '16-11-08', '16-11-09',
    #              '16-11-10', '16-11-11', '16-11-12', '16-11-13', '16-11-14', '16-11-15', '16-11-16', '16-11-17',
    #              '16-11-18', '16-11-19', '16-11-20', '16-11-21', '16-11-22', '16-11-23', '16-11-24', '16-11-25',
    #              '16-11-26', '16-11-27', '16-11-28', '16-11-29', '16-11-30', '16-12-01', '16-12-02', '16-12-03',
    #              '16-12-04', '16-12-05', '16-12-06', '16-12-07', '16-12-08', '16-12-09', '16-12-10', '16-12-11',
    #              '16-12-12', '16-12-13', '16-12-14', '16-12-17', '16-12-18', '16-12-19', '16-12-20',
    #              '16-12-21', '16-12-22', '16-12-23', '16-12-24', '16-12-25', '16-12-26', '16-12-27', '16-12-28',
    #              '16-12-29', '16-12-30', '16-12-31']
    #
    # train_3months = [x for x in train_3months if x not in attack_days]
    # train_3months = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_dev_instances/instances/%s.csv' % fn
    #                  for fn in train_3months]
    #
    #
    # merge_ins = MergeInstances(train_3months, 'training-3month-without-feb.csv', 15)
    # merge_ins.merge_instance()
    #
    # test_3month = ['17-01-01', '17-01-02', '17-01-03', '17-01-04', '17-01-05',
    #              '17-01-06', '17-01-07', '17-01-08', '17-01-09', '17-01-10', '17-01-11', '17-01-12', '17-01-13',
    #              '17-01-14', '17-01-16', '17-01-17', '17-01-18', '17-01-19', '17-01-20', '17-01-21', '17-01-22',
    #              '17-01-23', '17-01-24', '17-01-25', '17-01-26', '17-01-27', '17-01-28', '17-01-29', '17-01-30',
    #              '17-01-31', '17-02-01', '17-02-03', '17-02-04', '17-02-05', '17-02-06', '17-02-07', '17-02-08',
    #              '17-02-09', '17-02-10', '17-02-11', '17-02-12', '17-02-13', '17-02-14', '17-02-15', '17-02-16',
    #              '17-02-17', '17-02-18', '17-02-19', '17-01-15', '17-02-02', '17-02-20', '17-03-10', '17-02-21',
    #              '17-02-22', '17-02-23', '17-02-24', '17-02-25', '17-02-26', '17-02-27', '17-02-28', '17-03-01',
    #              '17-03-02', '17-03-03', '17-03-04', '17-03-05', '17-03-06', '17-03-07', '17-03-08', '17-03-09',
    #              '17-03-11', '17-03-12', '17-03-13', '17-03-14', '17-03-15', '17-03-16', '17-03-17', '17-03-18',
    #              '17-03-19', '17-03-20', '17-03-21', '17-03-22', '17-03-23', '17-03-24', '17-03-25', '17-03-26',
    #              '17-03-27', '17-03-28', '17-03-29', '17-03-30', '17-03-31']
    #
    # test_3month = [x for x in test_3month if x not in attack_days]
    # test_3month = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_dev_instances/instances/%s.csv' % fn
    #                  for fn in test_3month]
    # merge_ins = MergeInstances(test_3month, 'testing-3month-without-feb.csv', 15)
    # merge_ins.merge_instance()
    # ##########################OF device identification##########################


    ##########################OF device identification with feb##########################
    # train_3months = ['16-10-01', '16-10-02', '16-10-03', '16-10-04', '16-10-05', '16-10-06', '16-10-07', '16-10-08',
    #              '16-10-09', '16-10-10', '16-10-11', '16-10-12', '16-10-13', '16-10-14', '16-10-15', '16-10-16',
    #              '16-10-17', '16-10-18', '16-10-19', '16-10-20', '16-10-21', '16-10-22', '16-10-23', '16-10-24',
    #              '16-10-25', '16-10-26', '16-10-27', '16-10-28', '16-10-29', '16-10-30', '16-10-31', '16-11-01',
    #              '16-11-02', '16-11-03', '16-11-04', '16-11-05', '16-11-06', '16-11-07', '16-11-08', '16-11-09',
    #              '16-11-10', '16-11-11', '16-11-12', '16-11-13', '16-11-14', '16-11-15', '16-11-16', '16-11-17',
    #              '16-11-18', '16-11-19', '16-11-20', '16-11-21', '16-11-22', '16-11-23', '16-11-24', '16-11-25',
    #              '16-11-26', '16-11-27', '16-11-28', '16-11-29', '16-11-30', '16-12-01', '16-12-02', '16-12-03',
    #              '16-12-04', '16-12-05', '16-12-06', '16-12-07', '16-12-08', '16-12-09', '16-12-10', '16-12-11',
    #              '16-12-12', '16-12-13', '16-12-14', '16-12-17', '16-12-18', '16-12-19', '16-12-20',
    #              '16-12-21', '16-12-22', '16-12-23', '16-12-24', '16-12-25', '16-12-26', '16-12-27', '16-12-28',
    #              '16-12-29', '16-12-30', '16-12-31',
    #              '17-02-12', '17-02-13', '17-02-14', '17-02-15', '17-02-16',
    #              '17-02-17', '17-02-18', '17-02-19', '17-02-20', '17-02-21',
    #              '17-02-22', '17-02-23', '17-02-24', '17-02-25',
    #              ]
    #
    # train_3months = [x for x in train_3months if x not in attack_days]
    #
    # src_filepaths = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_dev_instances/instances/%s.csv' % fn
    #                  for fn in train_3months]
    # merge_ins = MergeInstances(src_filepaths, 'training-3month-include-feb.csv', 15)
    # merge_ins.merge_instance()
    #
    # test_all = ['17-01-01', '17-01-02', '17-01-03', '17-01-04', '17-01-05',
    #              '17-01-06', '17-01-07', '17-01-08', '17-01-09', '17-01-10', '17-01-11', '17-01-12', '17-01-13',
    #              '17-01-14', '17-01-15', '17-01-16', '17-01-17', '17-01-18', '17-01-19', '17-01-20', '17-01-21', '17-01-22',
    #              '17-01-23', '17-01-24', '17-01-25', '17-01-26', '17-01-27', '17-01-28', '17-01-29', '17-01-30',
    #              '17-01-31', '17-02-01', '17-02-02', '17-02-03', '17-02-04', '17-02-05', '17-02-06', '17-02-07', '17-02-08',
    #              '17-02-09', '17-02-10', '17-02-11',
    #                 '17-02-26', '17-02-27', '17-02-28', '17-03-01',
    #              '17-03-02', '17-03-03', '17-03-04', '17-03-05', '17-03-06', '17-03-07', '17-03-08', '17-03-09',  '17-03-10',
    #              '17-03-11', '17-03-12', '17-03-13', '17-03-14', '17-03-15', '17-03-16', '17-03-17', '17-03-18',
    #              '17-03-19', '17-03-20', '17-03-21', '17-03-22', '17-03-23', '17-03-24', '17-03-25', '17-03-26',
    #              '17-03-27', '17-03-28', '17-03-29', '17-03-30', '17-03-31']
    #
    # test_all = [x for x in test_all if x not in attack_days]
    #
    # src_filepaths = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_dev_instances/instances/%s.csv' % fn
    #                  for fn in test_all]
    # merge_ins = MergeInstances(src_filepaths, 'testing-3month-include-feb.csv', 15)
    # merge_ins.merge_instance()
    ##########################OF device identification##########################


    ##########################OF State identification##########################
    # state_all =  [
    #     '18-02-14', '18-02-15', '18-02-16', '18-02-17', '18-02-18', '18-02-19', '18-02-20', '18-02-21', '18-02-22',
    #     '18-02-23', '18-02-24', '18-02-25', '18-02-26', '18-02-27', '18-02-28', '18-03-01', '18-03-02', '18-03-03',
    #     '18-03-04', '18-03-05', '18-03-06', '18-03-07', '18-03-08', '18-03-09', '18-03-10', '18-03-11' ]
    #
    # src_filepaths = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_state_instacnes/instances/%s.csv' % fn
    #                  for fn in state_all]
    # merge_ins = MergeInstances(src_filepaths, 'all-state-instances.csv', 0)
    # merge_ins.merge_instance()


    #########################OF device identification all days togather##########################
    all_days = ['16-10-01', '16-10-02', '16-10-03', '16-10-04', '16-10-05', '16-10-06', '16-10-07', '16-10-08',
                 '16-10-09', '16-10-10', '16-10-11', '16-10-12', '16-10-13', '16-10-14', '16-10-15', '16-10-16',
                 '16-10-17', '16-10-18', '16-10-19', '16-10-20', '16-10-21', '16-10-22', '16-10-23', '16-10-24',
                 '16-10-25', '16-10-26', '16-10-27', '16-10-28', '16-10-29', '16-10-30', '16-10-31', '16-11-01',
                 '16-11-02', '16-11-03', '16-11-04', '16-11-05', '16-11-06', '16-11-07', '16-11-08', '16-11-09',
                 '16-11-10', '16-11-11', '16-11-12', '16-11-13', '16-11-14', '16-11-15', '16-11-16', '16-11-17',
                 '16-11-18', '16-11-19', '16-11-20', '16-11-21', '16-11-22', '16-11-23', '16-11-24', '16-11-25',
                 '16-11-26', '16-11-27', '16-11-28', '16-11-29', '16-11-30', '16-12-01', '16-12-02', '16-12-03',
                 '16-12-04', '16-12-05', '16-12-06', '16-12-07', '16-12-08', '16-12-09', '16-12-10', '16-12-11',
                 '16-12-12', '16-12-13', '16-12-14', '16-12-17', '16-12-18', '16-12-19', '16-12-20',
                 '16-12-21', '16-12-22', '16-12-23', '16-12-24', '16-12-25', '16-12-26', '16-12-27', '16-12-28',
                 '16-12-29', '16-12-30', '16-12-31','17-01-01', '17-01-02', '17-01-03', '17-01-04', '17-01-05',
                 '17-01-06', '17-01-07', '17-01-08', '17-01-09', '17-01-10', '17-01-11', '17-01-12', '17-01-13',
                 '17-01-14', '17-01-16', '17-01-17', '17-01-18', '17-01-19', '17-01-20', '17-01-21', '17-01-22',
                 '17-01-23', '17-01-24', '17-01-25', '17-01-26', '17-01-27', '17-01-28', '17-01-29', '17-01-30',
                 '17-01-31', '17-02-01', '17-02-03', '17-02-04', '17-02-05', '17-02-06', '17-02-07', '17-02-08',
                 '17-02-09', '17-02-10', '17-02-11', '17-02-12', '17-02-13', '17-02-14', '17-02-15', '17-02-16',
                 '17-02-17', '17-02-18', '17-02-19', '17-01-15', '17-02-02', '17-02-20', '17-03-10', '17-02-21',
                 '17-02-22', '17-02-23', '17-02-24', '17-02-25', '17-02-26', '17-02-27', '17-02-28', '17-03-01',
                 '17-03-02', '17-03-03', '17-03-04', '17-03-05', '17-03-06', '17-03-07', '17-03-08', '17-03-09',
                 '17-03-11', '17-03-12', '17-03-13', '17-03-14', '17-03-15', '17-03-16', '17-03-17', '17-03-18',
                 '17-03-19', '17-03-20', '17-03-21', '17-03-22', '17-03-23', '17-03-24', '17-03-25', '17-03-26',
                 '17-03-27', '17-03-28', '17-03-29', '17-03-30', '17-03-31']

    all_days = [x for x in all_days if x not in attack_days]
    all_days = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_dev_instances/instances/%s.csv' % fn
                     for fn in all_days]


    merge_ins = MergeInstances(all_days, 'device_identification_full_dataset.csv', 15)
    merge_ins.merge_instance()
    #########################OF device identification##########################


    ##########################OF State activity##########################
    # activity_all =  [
    #     '18-06-14', '18-06-15']
    #
    # src_filepaths = ['/Users/Arunan/Documents/coderepo/sdn-sim3/py-postprocess/of_state_instacnes_new_activitybased/instances/%s.csv' % fn
    #                  for fn in activity_all]
    # merge_ins = MergeInstances(src_filepaths, 'all-activity-instances.csv', 0)
    # merge_ins.merge_instance()